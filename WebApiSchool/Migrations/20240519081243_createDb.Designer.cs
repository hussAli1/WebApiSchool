// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiSchool.DataAccess;

#nullable disable

namespace WebApiSchool.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240519081243_createDb")]
    partial class createDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Course", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GUID");

                    b.ToTable("Courses", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Enrollment", b =>
                {
                    b.Property<Guid>("SectionGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SectionGUID", "ParticipantGUID");

                    b.HasIndex("ParticipantGUID");

                    b.ToTable("Enrollments", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Instructor", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("OfficeGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GUID");

                    b.HasIndex("OfficeGUID")
                        .IsUnique()
                        .HasFilter("[OfficeGUID] IS NOT NULL");

                    b.ToTable("Instructors", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Office", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfficeLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("OfficeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("GUID");

                    b.ToTable("Offices", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Participant", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("GUID");

                    b.ToTable("Particpants", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.PermissionGroup", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GUID");

                    b.ToTable("PermissionGroups");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Review", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GUID");

                    b.HasIndex("CourseGUID");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Schedule", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("FRI")
                        .HasColumnType("bit");

                    b.Property<bool>("MON")
                        .HasColumnType("bit");

                    b.Property<bool>("SAT")
                        .HasColumnType("bit");

                    b.Property<bool>("SUN")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("THU")
                        .HasColumnType("bit");

                    b.Property<bool>("TUE")
                        .HasColumnType("bit");

                    b.Property<bool>("WED")
                        .HasColumnType("bit");

                    b.HasKey("GUID");

                    b.ToTable("Schedules", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Section", b =>
                {
                    b.Property<Guid>("GUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstructorGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScheduleGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("Varchar");

                    b.HasKey("GUID");

                    b.HasIndex("CourseGUID");

                    b.HasIndex("InstructorGUID");

                    b.HasIndex("ScheduleGUID");

                    b.ToTable("Sections", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PermissionGroupGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GUID");

                    b.HasIndex("PermissionGroupGUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Corporate", b =>
                {
                    b.HasBaseType("WebApiSchool.DataAccess.Models.Participant");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Coporates", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Individual", b =>
                {
                    b.HasBaseType("WebApiSchool.DataAccess.Models.Participant");

                    b.Property<bool>("IsIntern")
                        .HasColumnType("bit");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfGraduation")
                        .HasColumnType("int");

                    b.ToTable("Individuals", (string)null);
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Enrollment", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiSchool.DataAccess.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Instructor", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Office", "Office")
                        .WithOne("Instructor")
                        .HasForeignKey("WebApiSchool.DataAccess.Models.Instructor", "OfficeGUID");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Review", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Course", "Course")
                        .WithMany("Reviews")
                        .HasForeignKey("CourseGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Section", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiSchool.DataAccess.Models.Instructor", "Instructor")
                        .WithMany("Sections")
                        .HasForeignKey("InstructorGUID");

                    b.HasOne("WebApiSchool.DataAccess.Models.Schedule", "Schedule")
                        .WithMany("Sections")
                        .HasForeignKey("ScheduleGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WebApiSchool.DataAccess.Models.DateRange", "DateRange", b1 =>
                        {
                            b1.Property<Guid>("SectionGUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("date")
                                .HasColumnName("EndDate");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("date")
                                .HasColumnName("StartDate");

                            b1.HasKey("SectionGUID");

                            b1.ToTable("Sections");

                            b1.WithOwner()
                                .HasForeignKey("SectionGUID");
                        });

                    b.OwnsOne("WebApiSchool.DataAccess.Models.TimeSlot", "TimeSlot", b1 =>
                        {
                            b1.Property<Guid>("SectionGUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeSpan>("EndTime")
                                .HasColumnType("time(0)")
                                .HasColumnName("EndTime");

                            b1.Property<TimeSpan>("StartTime")
                                .HasColumnType("time(0)")
                                .HasColumnName("StartTime");

                            b1.HasKey("SectionGUID");

                            b1.ToTable("Sections");

                            b1.WithOwner()
                                .HasForeignKey("SectionGUID");
                        });

                    b.Navigation("Course");

                    b.Navigation("DateRange")
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Schedule");

                    b.Navigation("TimeSlot")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.User", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.PermissionGroup", "PermissionGroup")
                        .WithMany("Users")
                        .HasForeignKey("PermissionGroupGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionGroup");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Corporate", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Participant", null)
                        .WithOne()
                        .HasForeignKey("WebApiSchool.DataAccess.Models.Corporate", "GUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Individual", b =>
                {
                    b.HasOne("WebApiSchool.DataAccess.Models.Participant", null)
                        .WithOne()
                        .HasForeignKey("WebApiSchool.DataAccess.Models.Individual", "GUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Course", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Instructor", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Office", b =>
                {
                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.PermissionGroup", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApiSchool.DataAccess.Models.Schedule", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
